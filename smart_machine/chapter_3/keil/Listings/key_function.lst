C51 COMPILER V9.60.7.0   KEY_FUNCTION                                                      04/22/2024 11:15:07 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE KEY_FUNCTION
OBJECT MODULE PLACED IN .\Objects\key_function.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\key_function.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\key_function.lst) TABS(2) OBJECT(.\Objects\key_function.obj)

line level    source

   1          typedef unsigned char uchar;
   2          extern unsigned char Column;
   3          extern unsigned char Page_ ;  // 页地址寄存器 D1,DO:页地址
   4          extern unsigned char Code_ ;  // 字符代码寄存器
   5          
   6          extern unsigned char Command; // 指令寄存器
   7          extern unsigned char LCDData; // 数据寄存器
   8          
   9          void WriteCHN16x16(uchar Page_,uchar Column,uchar Code_);
  10          void get_number_input(uchar key);
  11          
  12          uchar add(uchar a, uchar b);
  13          uchar subtract(uchar a, uchar b);
  14          uchar multiply(uchar a, uchar b);
  15          uchar divide(uchar a, uchar b);
  16          uchar calculate_result(uchar *calculate_fun);
  17          
  18          uchar (*functionPtr)( uchar a ,uchar b);
  19          // functionPtr = add;
  20          // calculate_result(functionPtr);
  21          
  22          
  23          void precess_keyfn(unsigned char key_num)
  24          {
  25   1        switch(key_num)
  26   1        {
  27   2          case 7://显示模式0
  28   2          {
  29   3            Page_ = 0x02;     //设置显示行
  30   3            // Column = 0x00;   //设置显示列
  31   3            Code_ = 0x04;
  32   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
  33   3                  get_number_input(7);
  34   3            
  35   3          }break;
  36   2          case 8://显示模式1
  37   2          {
  38   3            Page_ = 0x02;
  39   3            // Column = 0x10;
  40   3            Code_ = 0x05;
  41   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
  42   3                  get_number_input(8);
  43   3            
  44   3          }break;
  45   2          case 9://显示模式2
  46   2          {
  47   3            Page_ = 0x02;
  48   3            // Column = 0x20;
  49   3            Code_ = 0x06;
  50   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
  51   3                  get_number_input(9);
  52   3            
  53   3          }break;
  54   2          case 10://显示模式3
C51 COMPILER V9.60.7.0   KEY_FUNCTION                                                      04/22/2024 11:15:07 PAGE 2   

  55   2          {
  56   3            Page_ = 0x02;
  57   3            // Column = 0x30;
  58   3            Code_ = 0x07;
  59   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
  60   3                  get_number_input(10);
  61   3            
  62   3          }break;
  63   2          case ('T')://显示模式4
  64   2          {
  65   3            Page_ = 0x02;
  66   3            // Column = 0x40;
  67   3            Code_ = 0x08;
  68   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
  69   3            
  70   3          }break;
  71   2          case ('R')://显示模式5
  72   2          {
  73   3            Page_ = 0x02;
  74   3            // Column = 0x50;
  75   3            Code_ = 0x09;
  76   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
  77   3            
  78   3          }break;
  79   2          
  80   2          //*******************************************
  81   2          
  82   2          case 4://显示模式0
  83   2          {
  84   3            Page_ = 0x00;     //设置显示行
  85   3            // Column = 0x00;   //设置显示列
  86   3            Code_ = 0x0A;
  87   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
  88   3                  get_number_input(4);
  89   3            
  90   3          }break;
  91   2          case 5://显示模式1
  92   2          {
  93   3            Page_ = 0x00;
  94   3            // Column = 0x10;
  95   3            Code_ = 0x0B;
  96   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
  97   3                  get_number_input(5);
  98   3            
  99   3          }break;
 100   2          case 6://显示模式2
 101   2          {
 102   3            Page_ = 0x00;
 103   3            // Column = 0x20;
 104   3            Code_ = 0x0C;
 105   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 106   3                  get_number_input(6);
 107   3            
 108   3          }break;
 109   2          case 11://显示模式3
 110   2          {
 111   3            Page_ = 0x00;
 112   3            // Column = 0x30;
 113   3            Code_ = 0x0D;
 114   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 115   3                  get_number_input(11);
 116   3            
C51 COMPILER V9.60.7.0   KEY_FUNCTION                                                      04/22/2024 11:15:07 PAGE 3   

 117   3          }break;
 118   2          case ('S')://显示模式4
 119   2          {
 120   3            Page_ = 0x00;
 121   3            // Column = 0x40;
 122   3            Code_ = 0x0E;
 123   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 124   3      
 125   3            
 126   3          }break;
 127   2          case ('M')://显示模式5
 128   2          {
 129   3            Page_ = 0x00;
 130   3            // Column = 0x50;
 131   3            Code_ = 0x0F;
 132   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 133   3      
 134   3            
 135   3          }break;
 136   2          
 137   2          //*******************************************
 138   2          
 139   2          case 1://显示模式0
 140   2          {
 141   3            Page_ = 0x02;     //设置显示行
 142   3            // Column = 0x00;   //设置显示列
 143   3            Code_ = 0x10;
 144   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 145   3                  get_number_input(1);
 146   3            
 147   3          }break;
 148   2          case 2://显示模式1
 149   2          {
 150   3            Page_ = 0x02;
 151   3            // Column = 0x10;
 152   3            Code_ = 0x11;
 153   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 154   3                  get_number_input(2);
 155   3            
 156   3          }break;
 157   2          case 3://显示模式2
 158   2          {
 159   3            Page_ = 0x02;
 160   3            // Column = 0x20;
 161   3            Code_ = 0x12;
 162   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 163   3                  get_number_input(3);
 164   3            
 165   3          }break;
 166   2          case 12://显示模式3
 167   2          {
 168   3            Page_ = 0x02;
 169   3            // Column = 0x30;
 170   3            Code_ = 0x13;
 171   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 172   3            get_number_input(12);
 173   3          }break;
 174   2          case ('H')://显示模式4
 175   2          {
 176   3            Page_ = 0x02;
 177   3            // Column = 0x40;
 178   3            Code_ = 0x14;
C51 COMPILER V9.60.7.0   KEY_FUNCTION                                                      04/22/2024 11:15:07 PAGE 4   

 179   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 180   3            
 181   3          }break;
 182   2          case ('L')://显示模式5
 183   2          {
 184   3            Page_ = 0x02;
 185   3            // Column = 0x50;
 186   3            Code_ = 0x15;
 187   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 188   3            
 189   3          }break;
 190   2          
 191   2          //*******************************************
 192   2          
 193   2          //*******************************************
 194   2          
 195   2          case 0://显示模式0
 196   2          {
 197   3            Page_ = 0x00;     //设置显示行
 198   3            // Column = 0x00;   //设置显示列
 199   3            Code_ = 0x16;
 200   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 201   3                  get_number_input(0);
 202   3            
 203   3          }break;
 204   2          case 15://显示模式1
 205   2          {
 206   3            Page_ = 0x00;
 207   3            // Column = 0x10;
 208   3            Code_ = 0x17;
 209   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 210   3                  get_number_input(15);
 211   3            
 212   3          }break;
 213   2          case 14://显示模式2
 214   2          {
 215   3            Page_ = 0x00;
 216   3            // Column = 0x20;
 217   3            Code_ = 0x18;
 218   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 219   3                  get_number_input(14);
 220   3            
 221   3          }break;
 222   2          case 13://显示模式3
 223   2          {
 224   3            Page_ = 0x00;
 225   3            // Column = 0x30;
 226   3            Code_ = 0x19;
 227   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 228   3                  get_number_input(13);
 229   3            
 230   3          }break;
 231   2          case ('X')://显示模式4
 232   2          {
 233   3            Page_ = 0x00;
 234   3            // Column = 0x40;
 235   3            Code_ = 0x1A;
 236   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 237   3            
 238   3          }break;
 239   2          case ('N')://显示模式5
 240   2          {
C51 COMPILER V9.60.7.0   KEY_FUNCTION                                                      04/22/2024 11:15:07 PAGE 5   

 241   3            Page_ = 0x00;
 242   3            // Column = 0x50;
 243   3            Code_ = 0x1B;
 244   3            WriteCHN16x16(Page_ ,Column=0x00 ,Code_);
 245   3            
 246   3          }break;
 247   2          
 248   2          
 249   2          default:break;//其余情况不更新显示
 250   2          
 251   2        }
 252   1        
 253   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    503    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
